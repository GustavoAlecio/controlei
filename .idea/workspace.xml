<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="725080df-3c47-4e98-a99a-149ae9718340" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/widgets/account_card.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/widgets/widgets.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/core/lib/src/data/infrastructure/failure/value_failure.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/core/lib/src/domain/domain.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/core/lib/src/domain/value_object/amount.dart" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/core/lib/src/domain/value_object/value_object.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apps/finances/lib/home_page.dart" beforeDir="false" afterPath="$PROJECT_DIR$/apps/finances/lib/home_page.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/data/mocks/account_repository_mock.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/data/mocks/account_repository_mock.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/domain/entities/account.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/domain/entities/account.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/domain/entities/account.freezed.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/domain/entities/account.freezed.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/domain/repositories/account_repository.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/domain/repositories/account_repository.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/domain/usecases/get_accounts_usecase.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/domain/usecases/get_accounts_usecase.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/domain/usecases/mark_as_paid_usecase.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/domain/usecases/mark_as_paid_usecase.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/notifiers/account_state_notifier.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/notifiers/account_state_notifier.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/presentation.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/presentation.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/views/create_account_view.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/lib/src/presentation/views/create_account_view.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/accounts/test/src/domain/entities/account_test.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/accounts/test/src/domain/entities/account_test.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/lib/src/data/infrastructure/failure/failure.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/lib/src/data/infrastructure/failure/failure.dart" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/lib/src/src.dart" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/lib/src/src.dart" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dart File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2yBJdw1pzxtpiuiUhTX4lB2u8on" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Flutter Test.AppColors.executor": "Run",
    "Flutter Test.CreateAccountUseCase.executor": "Run",
    "Flutter Test.deve criar uma conta v\\u00e1lida com os valores obrigat\\u00f3rios.executor": "Run",
    "Flutter Test.should create account and return Right(void) when successful.executor": "Run",
    "Flutter Test.should create with null values by default.executor": "Run",
    "Flutter Test.should have all fields null by default.executor": "Run",
    "Flutter Test.tests in account_test.dart.executor": "Run",
    "Flutter Test.tests in create_account_usecase_test.dart.executor": "Coverage",
    "Flutter Test.tests in test.executor": "Run",
    "Flutter.Flutter Run -> 'finances'.executor": "Debug",
    "Flutter.main.dart.executor": "Debug",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "dart.analysis.tool.window.visible": "false",
    "io.flutter.reload.alreadyRun": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/gustavooliveira/development/contabilidade/packages/core",
    "settings.editor.selected.configurable": "flutter.settings",
    "show.migrate.to.gradle.popup": "false"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages/core" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages/design_system/lib" />
    </key>
  </component>
  <component name="RunManager" selected="Flutter.Flutter Run -&gt; 'finances'">
    <configuration name="CreateAccountUseCase" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="CreateAccountUseCase" />
      <option name="testFile" value="$PROJECT_DIR$/packages/accounts/test/src/domain/usecases/create_account_usecase_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="should create account and return Right(void) when successful" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="should create account and return Right(void) when successful" />
      <option name="testFile" value="$PROJECT_DIR$/packages/accounts/test/src/domain/usecases/create_account_usecase_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="should create with null values by default" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="should create with null values by default" />
      <option name="testFile" value="$PROJECT_DIR$/packages/accounts/test/src/domain/entities/installment_info_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="should have all fields null by default" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testName" value="should have all fields null by default" />
      <option name="testFile" value="$PROJECT_DIR$/packages/accounts/test/src/domain/entities/account_filter_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="tests in create_account_usecase_test.dart" type="FlutterTestConfigType" factoryName="Flutter Test" temporary="true" nameIsGenerated="true">
      <option name="testFile" value="$PROJECT_DIR$/packages/accounts/test/src/domain/usecases/create_account_usecase_test.dart" />
      <option name="useRegexp" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="melos_expenses_plans" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="melos_expenses_plans" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Flutter Test.tests in create_account_usecase_test.dart" />
        <item itemvalue="Flutter Test.CreateAccountUseCase" />
        <item itemvalue="Flutter Test.should create account and return Right(void) when successful" />
        <item itemvalue="Flutter Test.should have all fields null by default" />
        <item itemvalue="Flutter Test.should create with null values by default" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SwiftWorkspaceSettings">
    <option name="detectedToolchain" value="true" />
    <option name="toolchainPathValue" value="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="725080df-3c47-4e98-a99a-149ae9718340" name="Changes" comment="" />
      <created>1749302123830</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749302123830</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="Dart">
          <url>file://$PROJECT_DIR$/packages/accounts/test/src/domain/entities/account_filter_test.dart</url>
          <line>6</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="Dart">
          <url>file://$PROJECT_DIR$/packages/accounts/test/src/domain/entities/account_filter_test.dart</url>
          <line>8</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="../../../../development/contabilidade/packages/accounts/coverage/lcov.info" NAME="tests in create_account_usecase_test.dart Coverage Results" MODIFIED="1751956462868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="FlutterCoverageRunner" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>