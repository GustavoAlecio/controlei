// Mocks generated by Mockito 5.4.4 from annotations
// in accounts/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:accounts/src/domain/entities/entities.dart' as _i5;
import 'package:accounts/src/domain/repositories/account_repository.dart'
    as _i2;
import 'package:core/core.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IAccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAccountRepository extends _i1.Mock
    implements _i2.IAccountRepository {
  MockIAccountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>> getAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>>.value(
                _i6.dummyValue<_i4.Either<_i4.Failure, List<_i5.Account>>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, List<String>>> getCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<_i4.Failure, List<String>>>.value(
            _i6.dummyValue<_i4.Either<_i4.Failure, List<String>>>(
          this,
          Invocation.method(
            #getCategories,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, List<String>>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>> getAccountsByFilter(
          _i5.AccountFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountsByFilter,
          [filter],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>>.value(
                _i6.dummyValue<_i4.Either<_i4.Failure, List<_i5.Account>>>(
          this,
          Invocation.method(
            #getAccountsByFilter,
            [filter],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, List<_i5.Account>>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, void>> createAccount(
          _i5.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [account],
        ),
        returnValue: _i3.Future<_i4.Either<_i4.Failure, void>>.value(
            _i6.dummyValue<_i4.Either<_i4.Failure, void>>(
          this,
          Invocation.method(
            #createAccount,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, void>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, void>> updateAccount(
          _i5.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [account],
        ),
        returnValue: _i3.Future<_i4.Either<_i4.Failure, void>>.value(
            _i6.dummyValue<_i4.Either<_i4.Failure, void>>(
          this,
          Invocation.method(
            #updateAccount,
            [account],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, void>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, void>> deleteAccount(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [id],
        ),
        returnValue: _i3.Future<_i4.Either<_i4.Failure, void>>.value(
            _i6.dummyValue<_i4.Either<_i4.Failure, void>>(
          this,
          Invocation.method(
            #deleteAccount,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, void>>);

  @override
  _i3.Future<_i4.Either<_i4.Failure, void>> markAsPaid(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsPaid,
          [id],
        ),
        returnValue: _i3.Future<_i4.Either<_i4.Failure, void>>.value(
            _i6.dummyValue<_i4.Either<_i4.Failure, void>>(
          this,
          Invocation.method(
            #markAsPaid,
            [id],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i4.Failure, void>>);
}
